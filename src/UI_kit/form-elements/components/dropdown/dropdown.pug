include ../button/button
mixin dropdown(options = {size: 'large', type: 'default', placeholder: 'Текст', title: "text", buttons: false})
	-
		const dropdownExtraClasses = `dropdown_size-${options.size}`
		const items_wrapperExtraClasses = `dropdown__items-wrapper_size-${options.size}`
		const categoryExtraClasses = `dropdown__category_size-${options.size}`
		const change_panelExtraClasses = `dropdown__change-panel_size-${options.size}`

		const list = options.list || ['взрослые', 'дети', 'младенцы']
	-if(options.type === 'default')
		.dropdown(data-type="default" data-id=options.id class=dropdownExtraClasses)
			span.dropdown__title= options.title
			.dropdown__field-wrapper
				input.dropdown__field(type="text", placeholder=options.placeholder data-field autocomplete="off" readonly)
			.dropdown__items-wrapper(class=items_wrapperExtraClasses)
				.dropdown__items
					each item in list
						.dropdown__item  
							span.dropdown__category(class=categoryExtraClasses)= item
							.dropdown__change-panel(class=change_panelExtraClasses)
								span.dropdown__substract(class="dropdown__substract_disabled" data-change="sub") -
								span.dropdown__number 0
								span.dropdown__add(data-change="add") +
					-if(options.buttons)
						.dropdown__buttons-wrapper 
							.dropdown__button-clear
								+button({theme: 'none', size: 'small', arrow: false, link_text: 'очистить', color: 'gray'})
							.dropdown__button-apply
								+button({theme: 'none', size: 'small', arrow: false, link_text: 'применить', color: 'purple'})
	-if(options.type === 'filter')
		.dropdown(data-type="filter" data-id=options.id class=dropdownExtraClasses)
			span.dropdown__title=options.title
				.dropdown__field-wrapper(class=field_wrapperExtraClasses)
					input.dropdown__field(type="text", placeholder=options.placeholder autocomplete="off" readonly)
	-if(options.type === 'date')
		.dropdown-wrapper(data-type="date" data-id=options.id)
			.dropdown(class=`dropdown__from ${dropdownExtraClasses}` data-type="date_from")
				span.dropdown__title=options.title[0]
				.dropdown__field-wrapper(class=field_wrapperExtraClasses)
					input.dropdown__field(type="text", placeholder=options.placeholder autocomplete="off" data-time="from" readonly)
			.dropdown(class=`dropdown__to ${dropdownExtraClasses}` data-type="date_to")
				span.dropdown__title=options.title[1]
					.dropdown__field-wrapper(class=field_wrapperExtraClasses)
						input.dropdown__field(type="text", placeholder=options.placeholder autocomplete="off" data-time="to" readonly)